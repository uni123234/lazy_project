{
    "admins": [
        {
            "id": 1,
            "technology": "fastapi",
            "main_content": "\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: str = None):\n    return {\"item_id\": item_id, \"q\": q}\n",
            "run_content": "\nimport uvicorn\n\nif __name__ == \"__main__\":\n    uvicorn.run(\"main:app\", host=\"127.0.0.1\", port=8000, reload=True)\n",
            "requirements": "\nfastapi\nuvicorn\n",
            ".gitignore": "\n*.pyc\n__pycache__\n.env\n",
            "Readme": "\n## FastAPI API Example\n\nThis project contains a basic FastAPI API with two endpoints:\n\n* `\"/\"`: Returns a JSON object with the text \"Hello\": \"World\".\n* `\"/items/{item_id}\"`: Takes an `item_id` parameter (integer) and returns a JSON object with the `item_id` and an optional `q` parameter (string).\n\n### Usage\n\n1. Create a project folder.\n2. Create a file named `main.py` and paste the code from `admins_data[\"main_content\"]`.\n3. Create a file named `requirements.txt` and add `fastapi uvicorn`.\n4. Install the dependencies using `pip install -r requirements.txt`.\n5. Run the API using the command `uvicorn main:app --host=127.0.0.1 --port=8000`.\n\n### Additional Information\n\n* FastAPI documentation: https://fastapi.tiangolo.com/tutorial/first-steps/\n* How to write a FastAPI API: https://www.youtube.com/watch?v=SORiTsvnU28\n"
        },
        {
            "id": 2,
            "technology": "aiogram",
            "main_content": "\nfrom aiogram import Bot, Dispatcher, executor, types\n\nAPI_TOKEN = 'your_token'\n\nbot = Bot(token=API_TOKEN)\ndp = Dispatcher(bot)\n\n@dp.message_handler(commands=['start', 'help'])\nasync def send_welcome(message: types.Message):\n    await message.reply(\"Hello, I'm your bot!\")\n\nif __name__ == '__main__':\n    executor.start_polling(dp, skip_updates=True)\n",
            "requirements": "\naiogram\n",
            ".gitignore": "\n__pycache__\n.env\n",
            "Readme": "\n## aiogram Bot Example\n\nThis project contains a basic aiogram Bot example.\n\n### Usage\n\n1. Create a project folder.\n2. Create a file named `bot.py` and paste the code from `admins_data2[\"main_content\"]`.\n3. Create a file named `requirements.txt` and add `aiogram`.\n4. Install the dependencies using `pip install -r requirements.txt`.\n5. Run the bot using the command `python bot.py`.\n\n### Additional Information\n\n* aiogram documentation: https://docs.aiogram.dev/en/latest/\n"
        },
        {
            "id": 3,
            "technology": "flask",
            "files": [
                {
                    "parent": {},
                    "name": "main.py",
                    "content": "\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, Flask World!'\n"
                },
                {
                    "name": "run.py"
                    // ....
                }
            ]
            // "main_content": "\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, Flask World!'\n",
            // "run_content": "\nif __name__ == '__main__':\n    app.run(debug=True)\n",
            // "requirements": "\nflask\n",
            // ".gitignore": "\n*.pyc\n__pycache__\n.env\n",
            // "Readme": "\n## Flask Example\n\nThis project contains a basic Flask application.\n\n### Usage\n\n1. Create a project folder.\n2. Create a file named `app.py` and paste the code from `admins_data3[\"main_content\"]`.\n3. Create a file named `requirements.txt` and add `flask`.\n4. Install the dependencies using `pip install -r requirements.txt`.\n5. Run the application using the command `python app.py`.\n\n### Additional Information\n\n* Flask documentation: https://flask.palletsprojects.com/en/2.0.x/\n"
        }
    ]
}
